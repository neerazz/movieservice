schema {
    query: Query
    #    mutation: Mutation
}

type Query {
    artist(id:String!) : NameBasics
    artistandtitles(id:String!) : NameBasicsTitleBasics
    artists(name:String!, maxResults: Int!, pageNumber:Int!) : [NameBasics]!
    artistsandtitles(name:String!, maxResults: Int!, pageNumber:Int!) : [NameBasicsTitleBasics]

    title(id:String!) : TitleBasics
    titles(name:String!, maxResults: Int!, pageNumber:Int!) : [TitleBasics]!
    titleandartistsandprinciples(id:String!) : TitleBasicsNameTitlePrincipal
    titlesandartistsandprinciples(name:String!, maxResults: Int!, pageNumber:Int!) : [TitleBasicsNameTitlePrincipal]
    titleswithcrew(name:String!, maxResults: Int!, pageNumber:Int!): [TitleBasicCrew]!
    titleswithcrewandartists(name:String!, maxResults: Int!, pageNumber:Int!): [TitleBasicCrewNameBasic]!

    crew(id: String!) : TitleCrew
}

#type Mutation {
#
#}

type NameBasics{
    nconst : String!
    primaryName : String!
    birthYear : Int!
    deathYear : Int
    primaryProfession : String
    knownForTitles :String!
}

type TitleBasics{
    tconst : String!
    titleType : String!
    primaryTitle : String!
    originalTitle : String!
    isAdult : String!
    startYear : String!
    endYear : String
    runtimeMinutes : String!
    genres : String!
}

type TitleCrew{
    tconst : String!
    directors : String!
    writers : String!
}

type TitlePrincipal{
    titlePrincipalsUniqueConstrain : TitlePrincipalsUniqueConstrain!
    nconst : String!
    category : String!
    job : String
    characters : String
}

type TitlePrincipalsUniqueConstrain{
    tconst : String!
    ordering : String!
}

type TitleBasicCrew{
    titleBasics : TitleBasics
    titleCrew : TitleCrew
}

type TitleBasicCrewNameBasic{
    titleBasics : TitleBasics
    directors : [NameBasics]
    writers : [NameBasics]
}

type TitleBasicsNameTitlePrincipal{
    tconst : String!
    titleType : String!
    primaryTitle : String!
    originalTitle : String!
    isAdult : String!
    startYear : String!
    endYear : String
    runtimeMinutes : String!
    genres : String!
    principals : [TitlePrincipal]
    artists : [NameBasics]
}

type NameBasicsTitleBasics{
    nconst : String!
    primaryName : String!
    birthYear : Int!
    deathYear : Int
    primaryProfession : String
    knownForTitles :[TitleBasics]!
}